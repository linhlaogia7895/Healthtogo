/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package beans.patient;

import beans.main.NutritionLibraryBean;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.ejb.ConcurrencyManagement;
import javax.ejb.ConcurrencyManagementType;
import javax.ejb.Singleton;
import javax.ejb.LocalBean;
import javax.ejb.Lock;
import javax.ejb.LockType;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

/**
 * Document   : PatientAppointments.java
 * Version    : April 4, 2017
 * Author     : Marufa Chowdhury, Rachel Bautista, Mamadou Diallo, Tuan L. Truong, Rodney Vencio
 * Description: Bean for all patient appointments
 */
@ConcurrencyManagement(ConcurrencyManagementType.CONTAINER)
@Singleton
@LocalBean
public class PatientAppointments {
    /**
     * Method to create an instance of the connection to the MYSQL DBase
     * @return Connection the connection to the DBAse
     */
    @Lock(LockType.READ)
    private Connection getConnection(){
	Connection conn=null;
	
	try {
	    Class.forName("com.mysql.jdbc.Driver");
	    InitialContext ic=new InitialContext();
	    DataSource ds=(DataSource)ic.lookup("jdbc/htgConnectionPool");
	    conn=ds.getConnection();
	} catch (ClassNotFoundException | NamingException | SQLException ex) {
	    Logger.getLogger(NutritionLibraryBean.class.getName()).log(Level.SEVERE, null, ex);
	}
	return conn;
    }
    
    
}
