/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package beans.patient;

import beans.users.UsersBean;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.ejb.ConcurrencyManagement;
import javax.ejb.ConcurrencyManagementType;
import javax.ejb.Stateful;
import javax.ejb.LocalBean;
import javax.ejb.Lock;
import javax.ejb.LockType;
import javax.ejb.Singleton;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

/**
 *
 * @author 696645
 */
//@Stateful
//@LocalBean
@ConcurrencyManagement(ConcurrencyManagementType.CONTAINER)
//@Stateless
@Singleton
public class PatientInfoBean {

    private String firstname;
    private String lastname;
    private String email;
    private String address;
    private String homephone;
    private String cellphone;
    private Date dateofbirth;
    private String gender;
    private String contract;
    private SimpleDateFormat dt = new SimpleDateFormat("MM/DD/YYYY");

    public PatientInfoBean() {
    }
    
    public PatientInfoBean(String username) throws NamingException
    {
        try {
           
            PreparedStatement ps;
            try (Connection conn = getConnection()) {
                String sql="{call GetPatientInfo(?)}";
                ps = conn.prepareStatement(sql);
                ps.setString(1, username);
                ResultSet rs = ps.executeQuery();
                while(rs.next())
                {
                    this.firstname = rs.getString(2);
                    this.lastname = rs.getString(3);
                    this.email = rs.getString(4);
                    this.address = rs.getString(5);
                    this.homephone = rs.getString(6);
                    this.cellphone = rs.getString(7);
                    this.dateofbirth = rs.getDate(8);
                    this.gender = rs.getString(9);
                    this.contract = rs.getString(10);
                    
                }
                conn.close();
            }
            ps.close();
        } catch (SQLException ex) {
            Logger.getLogger(PatientBean.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    @Lock(LockType.READ)
    public String getFirstname()
    {
        return firstname;
    }
    
    @Lock(LockType.READ)
    public String getLastname()
    {
        return lastname;
    }
    
    @Lock(LockType.READ)
    public String getEmail()
    {
        return email;
    }
    
    @Lock(LockType.READ)
    public String getAddress()
    {
        return address;
    }
    
    @Lock(LockType.READ)
    public String getHomephone()
    {
        return homephone;
    }
    
    @Lock(LockType.READ)
    public String getCellphone()
    {
        return cellphone;
    }
    
    @Lock(LockType.READ)
    public String getDate()
    {
        return dt.format(dateofbirth);
    }
    
    @Lock(LockType.READ)
    public String getGender()
    {
        return gender;
    }
    
    @Lock(LockType.READ)
    public String getContract()
    {
        return contract;
    }
    /**
     * Private method to manage connections to jdbc
     * @return Connection the jdbc connection
     */
    private Connection getConnection() throws NamingException {
        Connection conn=null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            InitialContext ic=new InitialContext();
            DataSource ds=(DataSource)ic.lookup("jdbc/htgConnectionPool");
            conn=ds.getConnection();
        } catch (ClassNotFoundException | NamingException | SQLException ex) {
            Logger.getLogger(UsersBean.class.getName()).log(Level.SEVERE, null, ex);
        }
        return conn;
    }
}
